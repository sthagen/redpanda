steps:
- id: 'create .git/ folder'
  name: 'alpine/git:v2.24.1'
  entrypoint: '/bin/sh'
  args:
  - '-ec'
  - |
    if [[ ! -d ".git/" ]]; then
      git init
      git remote add origin https://github.com/vectorizedio/redpanda

      echo "Checking out COMMIT=${COMMIT_SHA}"
      git fetch --depth=200 origin $COMMIT_SHA
      git reset --hard FETCH_HEAD

      # fetch tags. if no commit found, fetch more.
      # fetch everything if tag is still not found.
      git fetch --tags origin
      if ! git describe; then
        git fetch --deepen=500 origin
        if ! git describe; then
          git fetch --unshallow origin || true
        fi
      fi
    fi

    if [[ "$_GITHUB_API_TOKEN" == "na" ]]; then
      echo "Expecting value for _GITHUB_API_TOKEN"
      exit 1
    fi
    git clone --depth 1 -b dev https://$_GITHUB_API_TOKEN@github.com/vectorizedio/vtools vtools

- id: 'install vtools'
  name: 'gcr.io/redpandaci/fedora:33-python39-docker2010'
  entrypoint: bash
  args:
  - -ec
  - |
    python3 -mvenv --system-site-packages --upgrade-deps build/venv/v
    source build/venv/v/bin/activate
    pip install vtools/

    # install infra-deps (needed by formatting check of terraform files)
    vtools install infra-deps --conf=vtools/vtools/artifacts/ci/vtools-gcc-release.yml

- id: 'build builder image'
  name: 'gcr.io/redpandaci/fedora:33-python39-docker2010'
  args: ['./build/venv/v/bin/vtools', 'dbuild', 'toolchain', '--conf=vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml']

- id: 'test rpk'
  name: 'gcr.io/redpandaci/builder'
  args: ['./build/venv/v/bin/vtools', 'test', 'go', '--conf=vtools/vtools/artifacts/ci/vtools-gcc-release.yml']

- id: 'restore ccache'
  name: 'docker:20.10.3'
  args: ['run', '--ipc=host', '--network=cloudbuild', 'gcr.io/redpandaci/restore_cache',
         '--bucket=gs://redpandaci-ccache', '--key=dev-$_BUILD_TYPE-$_COMPILER']

- id: 'build redpanda'
  name: 'docker:20.10.3'
  args: ['run', '-e', 'CCACHE_DIR=/dev/shm/v', '-v', '/workspace:/workspace', '-w', '/workspace', '--ipc=host', 'gcr.io/redpandaci/builder',
         './build/venv/v/bin/vtools', 'build', 'cpp', '--conf=vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml', '--skip-external']

- id: 'save ccache (only for dev branch)'
  name: 'docker:20.10.3'
  entrypoint: '/bin/sh'
  args:
  - '-ec'
  - |
    if [[ "$BRANCH_NAME" != "dev" ]]; then
      exit 0
    fi
    docker run --ipc=host --network=cloudbuild gcr.io/redpandaci/save_cache \
      --bucket=gs://redpandaci-ccache --key=dev-$_BUILD_TYPE-$_COMPILER --out=/dev/shm --path=/dev/shm/v

- id: 'test redpanda'
  name: 'gcr.io/redpandaci/builder'
  args: ['./build/venv/v/bin/vtools', 'test', 'cpp', '--conf=vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml']

- id: 'redpanda integration tests'
  name: 'gcr.io/redpandaci/builder'
  entrypoint: 'bash'
  args:
  - -cex
  - |
    ./build/venv/v/bin/vtools build go --targets=rpk --conf=vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml
    ./build/venv/v/bin/vtools build pkg --format=dir --conf vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml
    ./build/venv/v/bin/vtools install java --conf vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml
    ./build/venv/v/bin/vtools install maven --conf vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml
    ./build/venv/v/bin/vtools build java --conf vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml
    ./build/venv/v/bin/vtools deploy cluster --provider docker-compose nodes=4 --conf vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml
    ./build/venv/v/bin/vtools test ducky --skip-build-img --skip-pkg --provider docker-compose tests/rptest/test_suite_quick.yml --conf vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml
  env:
  - GH_TOKEN=$_GITHUB_API_TOKEN

- id: 'create and archive distro packages'
  name: 'gcr.io/redpandaci/builder'
  entrypoint: bash
  args:
  - -cex
  - |
    ./build/venv/v/bin/vtools build redpanda-dashboard --conf=vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml
    ./build/venv/v/bin/vtools build pkg --conf=vtools/vtools/artifacts/ci/vtools-$_COMPILER-$_BUILD_TYPE.yml --format=rpm --format=deb --format=tar
    ./build/venv/v/bin/vtools ci github-event --event-type packages-created
  env:
  - SHORT_SHA=$SHORT_SHA
  - GH_TOKEN=$_GITHUB_API_TOKEN

timeout: 3600s

options:
  machineType: 'N1_HIGHCPU_32'

artifacts:
  objects:
    location: 'gs://vectorizedio/rp_dev/$_BUILD_TYPE/$_COMPILER/$SHORT_SHA/'
    paths:
    - 'build/$_BUILD_TYPE/$_COMPILER/dist/debian/*.deb'
    - 'build/$_BUILD_TYPE/$_COMPILER/dist/rpm/RPMS/x86_64/*.rpm'
    - 'build/$_BUILD_TYPE/$_COMPILER/dist/tar/*.tar.gz'
