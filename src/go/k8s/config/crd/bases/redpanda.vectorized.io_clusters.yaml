
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusters.redpanda.vectorized.io
spec:
  group: redpanda.vectorized.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              configuration:
                description: Configuration represent redpanda specific configuration
                properties:
                  admin:
                    description: SocketAddress provide the way to configure the port
                    properties:
                      port:
                        type: integer
                    type: object
                  developerMode:
                    type: boolean
                  kafkaApi:
                    description: SocketAddress provide the way to configure the port
                    properties:
                      port:
                        type: integer
                    type: object
                  rpcServer:
                    description: SocketAddress provide the way to configure the port
                    properties:
                      port:
                        type: integer
                    type: object
                  tls:
                    description: "TLSConfig configures TLS for redpanda \n If KafkaAPIEnabled
                      is set to true, one-way TLS verification is enabled. In that
                      case, a key pair ('tls.crt', 'tls.key') and CA certificate 'ca.crt'
                      are generated and stored in a Secret with the same name and
                      namespace as the Redpanda cluster. 'ca.crt', must be used by
                      a client as a trustore when communicating with Redpanda. \n
                      If RequireClientAuth is set to true, two-way TLS verification
                      is enabled. In that case, a node and two client certificates
                      are created. The node certificate is used by redpanda nodes.
                      One client certificate is used by the operator client to make
                      KafkaAPI calls. The other client certificate is available for
                      Redpanda users to call KafkaAPI. The client certificate can
                      be retrieved from the Secret named '<redpanda-cluster-name>-user-client'.
                      The secret is stored in the same namespace as Redpanda cluster."
                    properties:
                      issuerRef:
                        description: References cert-manager Issuer or ClusterIssuer.
                          When provided, this issuer will be used to issue node as
                          well as client certificates. Typically you want to provide
                          the issuer when a generated self-signed one is not enough
                          and you need to have a verifiable chain with a proper CA
                          certificate.
                        properties:
                          group:
                            description: Group of the resource being referred to.
                            type: string
                          kind:
                            description: Kind of the resource being referred to.
                            type: string
                          name:
                            description: Name of the resource being referred to.
                            type: string
                        required:
                        - name
                        type: object
                      kafkaApiEnabled:
                        type: boolean
                      requireClientAuth:
                        description: Enables two-way verification on the server side.
                          If enabled, all Kafka API clients are required to have a
                          valid client certificate.
                        type: boolean
                    type: object
                type: object
              externalConnectivity:
                description: ExternalConnectivity adds listener that can be reached
                  outside of a kubernetes cluster. The Service type NodePort will
                  be used to create unique ports on each Kubernetes nodes. Those nodes
                  need to be reachable from the client perspective. Setting up any
                  additional resources in cloud or premise is the responsibility of
                  the Redpanda operator user e.g. allow to reach the nodes by creating
                  new rule in AWS security group. Inside the container the Configuration.KafkaAPI.Port
                  + 1 will be used as a external listener. This port is tight to the
                  autogenerated host port. The collision between Kafka external, Kafka
                  internal, Admin and RPC port is checked in the webhook.
                type: boolean
              image:
                description: Image is the fully qualified name of the Redpanda container
                type: string
              replicas:
                description: Replicas determine how big the cluster will be.
                format: int32
                minimum: 0
                type: integer
              resources:
                description: Resources used by each Redpanda container To calculate
                  overall resource consumption one need to multiply replicas against
                  limits
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                type: object
              version:
                description: Version is the Redpanda container tag
                type: string
            required:
            - resources
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              nodes:
                description: Nodes of the provisioned redpanda nodes
                properties:
                  external:
                    items:
                      type: string
                    type: array
                  internal:
                    items:
                      type: string
                    type: array
                type: object
              replicas:
                description: Replicas show how many nodes are working in the cluster
                format: int32
                type: integer
              upgrading:
                description: Indicates cluster is upgrading
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
